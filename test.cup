/* NFA/DFA */
/* Precedence? */
/* How do we actually write code to check if the input is syntactically correct? */
/* Difference btwn this week's assignment and next week's */
/* Changing from System.out.write to System.out.println */
/* What writes to system.err?*/

import java_cup.runtime.*;

parser code {:


:};

terminal           SEMI, PLUS, MINUS, TIMES, DIVIDE, LPAREN, RPAREN;
terminal Integer   NUMBER, ID;

non terminal Object     expr_list, expr_part;
non terminal Integer    expr, factor, term;

/* Apparently optional?? */
precedence left PLUS, MINUS;
precedence left TIMES, DIVIDE;

   expr_list ::= expr_list expr_part
                 |
                 expr_part;
				 
   expr_part ::= expr:e
                 {: System.out.println(" = " + e); :}
                 SEMI
                 ;
				 
   expr      ::= expr:e PLUS factor:f
                 {: RESULT = new Integer(e.intValue() + f.intValue()); :}
                 |
                 expr:e MINUS factor:f
                 {: RESULT = new Integer(e.intValue() - f.intValue()); :}
                 |
                 factor:f
                 {: RESULT = new Integer(f.intValue()); :}
                 ;
				 
   factor    ::= factor:f TIMES term:t
                 {: RESULT = new Integer(f.intValue() * t.intValue()); :}
                 |
                 factor:f DIVIDE term:t
                 {: RESULT = new Integer(f.intValue() / t.intValue()); :}
                 |
                 term:t
                 {: RESULT = new Integer(t.intValue()); :}
                 ;
				  
   term      ::= LPAREN expr:e RPAREN
                 {: RESULT = e; :}
                 |
                 NUMBER:n
                 {: RESULT = n; :}
                 |
                 ID:i
                 {: RESULT = i; :}
                 ;